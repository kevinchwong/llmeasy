name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: poetry install

    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> .env
        echo "MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }}" >> .env
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
        echo "GROK_API_KEY=${{ secrets.GROK_API_KEY }}" >> .env

    - name: Run unit tests
      run: |
        poetry run pytest tests/unit -v --cov=llmeasy --cov-report=xml

    - name: Run integration tests
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        poetry run pytest tests/integration -v --cov=llmeasy --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true